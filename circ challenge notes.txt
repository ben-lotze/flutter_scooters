MUST TODO
- API Keys + Restrictions
- alle Importe checken
- cleanup
	- gradle
- alles in neues repo: circ_flutter (wegen Keys)
- REST test der Exception wirft (alle HTTP cases testen)


OK
- Was tun mit WIdget Tests OLD ? --> einfach egal

ERLEDIGT
- fehlende tooltips
- iOS: center view zum Start funzt nicht
- map type popup -> noch ein paar dazu: Bike lanes, Public transit
- Menü links
	- My rides
	- Account
	- Settings
	oder nur: Rides (Bildschirm kopieren), oben im Drawer: Settings + Profil
cleanup
- google services json
- alle print weg



----------------

Task

Create a small app where you can show us great skills you have. App should read data from API available on this base URL - https://my-json-server.typicode.com/FlashScooters/Challenge. 

Requirements
* DONE Application should open map after start. 
* DONE Google Maps Flutter plugin should be used. 
* DONE Information about vehicles should be retrieved from /vehicles endpoint. 
* OK No authentication is needed. 
* DONE Vehicles should be presented as pins on map on retrieved locations. 
* DONE On vehicle selection, new card should popup with more detailed information about selected vehicles. 
* DONE On vehicle deselection, application should hide the card. 
* DONE On other vehicle selection, card should display info about newly selected vehicle. 

Notes
* OK Code needs to be well organised, testable and written in Dart. 

* Please create a publicly available Git repository with your solution. 
* As we are all trying to build bullet proof solutions, unit tests are mandatory. 

-------------------------------




FRAGEN!!!
- ok to use some icons from the original Circ app?


----- Features: -----
- QR Scanner on cenetr button --> must not do something useful 
	-> just scan some barcodes/QR and show data (if necessary: provide some picures that can be scanned)
	- i.e. QR codes that simulate numbers from scooters (encode: id, name, description)
	- then: simulate unlock (simple, no auth)
	- Hihi: wenn jemand einen Barcode scannt, der NICHT in der Nähe ist --> Fehlermeldung:
	  "You may have encountered an error. The scooter you just scanned is around 2 km away from you current position. Not sure how you did that."
	  --> in reality: misuse potential? just silently assume that the roller is there and was scanned? log this to central service
	- nach Scan: erst mal Popup zeigen
		- Infos, Battery, Name, Preis usw
		- Unlock Button
	- Ausdruck:
		QR Codes, auch ungültige -> für Test sinnvoller Fehlermeldung in App
- Achtung: Scanner: Back Button funzt nicht auf Note8 --> bleibt immer auf Scanner Screen !!!!!!


batteryLevel -> show already on map (next to or visualized inside pin) -> pin icon available as location...
- reasoning: important information --> no need to click on 
- even better: do not include scooters that will not be sufficient to reach destination in route search result (optional, )
	-> changing roller costs at the moment -> in future: could allow switching scooters without extra costs to allow longer rides (and make more money?)

Reservieren 
- Mock Endpunkt auf Server -> einfach in Api rein, ggf. mit Fake-Wartezeit, Random zwischen x/y, in 5% der Fälle Timeout mit Snackbar-Feedback
- sinnvoll für Routen (von/nach) -> schon mal reservieren wegen Fußweg
- "will be reserved for 15 minutes starting now"
- show countdown on pin + somewhere else in user stuff
- 

Karte/
- Suche: Entfernungssuche simulieren: nur in X km Entfernung suchen (Radius) --> in MockDing rein und das wiederum in CircApi reinziehen
- den einen Roller über Text suchen -> wo ist der? (fehlende ID ist 0?)
- Raussuchen: Roller kombinieren zu Cluster: nur ein Marker mit Anzahl


Android Versionen -> alte und neue testen für Berechtigungen (KArte, Kamera)


PriceFormatter
- vielleicht einfach nur static helper class?
- unnötig, das als Bloc zu machen

TimeFormatter
- <60 in Sekunden
- % 60 == 0 -> 1 minute


Guthaben irgendwie im BottomPopup anzeigen

Wenn man mehrere Roller gleichzeitig mietet: 50% auf den zweiten, 60% auf den dritten

Tipps:
- Bitte nicht zu zweit fahren (lustiges Bild dazu)
- ggf. die Bilder in der Anleitung ersetzen


UI
- Optionen: show zoom buttons for map
- switch to name instead of id --> looks nicer
- "By the way: The satellite icon shows the Circ building ;-)"
- map details button --> ggf weg, falls das nciht einfach klappt (oder nur andeuten als mögliche Funktion)
	-> andeuten mit Snackbar/Popup
- nach Unlocking -> Marker gegen anderes Icon austauschen (Rund mit Roller drin, Hintergrund orange)
	- vielleicht weiteren Button anzeigen für entsperrten Roller
	- theoretisch könnte man mehrere gleichzeitig entsperren!
- Handling der zwei Roller, die fast übereinander auf der Map sind
	- Als speziellen Marker anzeigen? (abhängig von Zoom und Entfernung) -> rund mit Zahl, sobald zu viele auf einem Fleck
	- ranzoomen bei Click
- Vehicle popup
	- Flashlight button mit Mini popup --> "Scooter should now signal with flashing lights" (only works when user is nearby to prevent misuse!)
	- center map button (falls man das Fahrzeug nicht mehr sieht)
- alle Buttons: visuelles Tap-Feedback auf Material Dings
- Popup/Keyboard nicht gleichzeitig?
- Marker must change color when selected!
- Tooltip-Widget um alle Buttons herum (sofern Widget keinen eigenen Tooltip enthält -> IconButton zB)
- Web !!!
- StartAnimation
	- Bilder von Instgram, fliegen alle ins Zentrum und verschwinden da im Circ Logo
- Animationen
	- How to page: braucht gemeinsames ELement für Hero
	- Drag to unlock: da kann immer so eine Farbanimation von links nach rechts durchwischen (um das Wischen anzudeuten)
	- map type: move icon to popup + header: "Select map type"
	- move scan button to top left when info popup opens?
	- move bottom buttons up right when info popup opens?
	  (Layer + Position könnten gleich oben rechts starten --> dann die anderen beiden einfach von unte rechts nach oben links darunter schieben)
- OHNE SafeArea -> immer korrekte Ausrichtung der Buttons
- Markers
	- wie in Google Anleitung
	- kein Hint-Poptup -> Card unten am Bildschirm
	- Pin umfärben -> wie? sind alle in Map mit K=rollerId (als inline comment am Ende der Zeile! "// K=scooterId")

	- falls Places intergrierbar: extra Markers für Places/Suchergebnis
- Map
	- options: only show vehicles nearby (better for navigation functionality)
	- can start google maps for navigation (extra button) -> iOS + Android
	- Ideen für Steuerung: 
		- Zwei FInger Perspektivänderung
		- Ansicht drehen GEHT SCHON (braucht Kompass Icon zum Zurücksetzen auf Norden)
- general info about scooters -> take from home page
	- like manual
	- please ride responsably
	- please use a helmet for your own security


IDEEN
- Eigene db Klasse für mehr Roller? --> ggf. mit HttpServer und eigener Rest-API --> aber das wäre schon etwas Arbeit und ist nicht verlangt!
- Multi user -> example: employer pays all rides until 5pm, after that user switches to private account

- Flash/blink --> Scooter erkennen
- Übersetzen DE/EN
- Rent history (quick shot for now: Hive to be platform independent: also works in browser)
	- ggf. Counter per Service im Hintergrund -> dann wird das realisitisch simuliert (auch falls die App zwischendurch tot ist)
	- in CircApi als Fake-Funktionen anbieten


Code/pretty/nice
- Bloc 
	- aufteilen in mehrere?
	- MapController nicht einfach nur im Subject halten?
	- mapController.markerTapped statt das im Marker Code zu haben
- alle Warnings weg
	- Dart version
- DONE (Http version) RestTools -> getList / getMap --> duplicates (some more)
- GIBT ES NICHT Annotations: @NotNull usw
- vehicle: wann refreshen? Battery bleibt nicht auf x% so lange es im Speicher ist. --> sollte von Server kommen --> assume there was such a functionality and present how code would look like on client


some "TODO reviewer:"" im Code --> besodnere Hinweise

Tests
- QR Scanner: mit pngs scannen lassen und codierten Code darin vergleichen
- calculateFormattedPriceForDuration: für 121s = 3m abrechnen usw., 1s sind basePreis plus 1 Minute ("// customer service may be happier if we don't do this.")
- 

---- TODO: ----
- !!!!!!! API KEYS !!!!!! -> nicht in github, sondern mit in Abgabe Text
	- auch in readme vermerken, wo die hin müssen
	- will be invalidated once the demo project has been checked
- text for submission: featues, screenshots and design decisions are all in the readme file on github (github repository start page)
- readme in github! features, screenshots, design decisions
	- Barcode-pdf zum Download anbieten + Anleitung dazu
- permissions: 
	- camera for barcode scanner
	- location (obviously) to show scooters nearby
- Gradle update DONE
- version resolution in gradle -> notwendig? kürzer?
- search for best practices in challenge apps 
	- how to stand out?
	- things they expect that are not obvious?
- Manual Test in Android and iOS!
- Maps API: Key restrictions? (currently none) -> JA, GOogle empfiehlt das
	https://developers.google.com/maps/documentation/android-sdk/get-api-key
	https://developers.google.com/maps/documentation/ios-sdk/get-api-key

- ios/Runner/AppDelegate.swift --> momentan Maps UND Places Api drin --> ggf. Places entfernen, falls ich das nicht nutze



CircApi
vehicles
.search(longitude, latitude, maxDistance)	// distance: is there a class? like Duration? -> otehrwise make my own --> look in Duration how to to calculations
.get(id)
.add(Vehicle)
.update(Vehicle)		???
.update(id, {param1, param2, ...})
.rideHistory

--> maybe add them and throw not implemented yet Exceptions?

db?


jokes?
 # TODO: Show them that I am an amazing developer.
 or:
 # DONE: Show them that I am an amazing developer.



Some observations about the Android app:
- asked me a 2nd time (AGB etc), after activated on emulator?
- view/look direction is always wrong (check in my app before mentioning this)


Some design decisions
* Two API keys, to use restrictions on each key.
* targeting Android API >= 21 for a Flutter barcode scanner package
* decided to use geolocator instead of location package (seemed like more active devlopment)
	* migrated to androidx to use this plugin
* permissions --> in manifest and need to be granted on runtime
* A click on a vehicle in the map should not center map (that is confusing for the user). --> Only if the needle would otherwise be hidden by the popup!


Advantages over current original Circ app:
* original drag handler has UI glitches (circle is not centered, has different paddings top/bottom/left, there is an unnecessary orange line under the circle)
* switch to current position in animated
* more map features

targeting iOS >9 to use Maps SDK 3.0


map overlay buttons:
- maps plugin offers some buttons, but their position is not customizable and were in the way of my intended interface. So I made my own buttons.
- this also allowed for animations (when opening/closing vehicle info popup)


unlock slider
- At first I made on myself based on Draggable and DragDestination. This did not bring the desired result since the horizontal movement can not be constrained. The Draggable can be dragged outside of the slide borders.
- Then I tried two libraries and was not satisfied with them.
- So I made my own.
- Fixed the little extra margin to the draggable's left (see original app's screenshots in Playstore)
- Made it very customizable and will release this as package on pub after some cleanup and testing.




Was fehlt in echter App?
Was könnte ich in meiner noch machen?




removed methods
calculateDistance



#swipe_button: ^0.0.2  # not so good
#slide_button: ^0.2.8
#fast_qr_reader_view: ^0.1.5  # dependency conflicts	
#flutter_google_places: ^0.2.3


removed TODOS usw

// TODO: zoom state --> should be updated from map via change of camera position (callback), same for zoomOut
// gilt auch für Position!!! -> bei resetNorth sprint er immer zu center

	// map bloc
  // TODO: method like onMapPositionChanged --> may need new search (depending on which area has been searched)!!!!!!!!!!!!!!!!!!!!!!!
  // definitivly add this? but can not be searched from endpoint! --> just assume there was such a functionality

_mapStateSubject = BehaviorSubject.seeded(MapState());  // TODO: with defaults, and last position (persisted)


// TODO: click on marker should not center map (that is confusing for the user), only change camera if marker would be hidden




  // TODO TEST STYLING (maybe traffic, bike? -> NO, just which elements are on map)
  // TODO: test: possible with platform channel to Android/iOS map component (which gets embedded)?

drag to unlock (full width) --> better name: drag to reserve
  (will be reserved for 15 minutes, after that it's again available for anybody else)

                //TODO: calculator/dragHandler for X minutes


            // unlock slider
            // TODO: goes into separate class -> adjustable! re-usable
            // TODO: should have lock/unlock icon on destination (destination side changes from left to right)
            // increase size on destination (feedback)
            // - constrain side movements -> how? no further than start/end
            // - when dragging: left of Draggable --> different background color (stronger effect of dragging something "sticky")
            // - move into distinct Widget class, make sizes static const class members
            // - when reaching right destination: switch icon to unlocked lock


// search bar
// TODO: make unfocus work (clicking anywhere else)
// TODO: autocomplete with maps data





MAP VIEW
// TODO also put map into separate class
// TODO: maybe StreamBuilder is not necessary here? (is this ever refreshed?)
// TODO: needs to  be refreshed based on current position --> Bloc with current position etc + StreamBuilder?
// TODO callback to Block: map tapped --> unfocus input, revert to Maps default overlays (in case they changed)


// TODO: do not always use default



Vehicle popup
// TODO: should update bloc or something -> TextINput needs to know -> also close this
  // TODO: use PersistentBottomSheetController	




  /*
  2nd bloc for navigation and auto complete (search)?
  MapsNavigationBloc

  NO text controller
  getAutoCompleteSuggestions(String input) --> send everything that is entered --> UI is based on streams


   */




Android dependencies
//    implementation 'com.google.firebase:firebase-analytics:16.0.5'      // 17.2.0 is newest, QR uses 16.0.5

//    implementation 'com.google.android.gms:play-services-basement:16.1.0'   // 16.1.0
//    implementation 'com.google.android.gms:play-services-measurement-base:16.0.4'
//    implementation 'com.android.support:support-annotations:28.0.0'

//    implementation 'androidx.appcompat:appcompat:1.1.0'     // 1.0.2
//    implementation 'androidx.annotation:annotation:1.1.0'



Tutorial
one page with multiple images for
- How to ride?
- Circ Scooter (scooter info)
- About Circ -> why? goals, ...
alternative design ideas:
- top: 3 images as tabs -> content is to be scrolled (indicator circles)
 





## Getting Started

- [Lab: Write your first Flutter app](https://flutter.dev/docs/get-started/codelab)
- [Cookbook: Useful Flutter samples](https://flutter.dev/docs/cookbook)
